Technical Prompt for Replit AI Review
(Instruction for User: Please send the following to the Replit AI Developer.)

Do not write any code. Review these instructions and let me know if it fits our overall strategy and if it violates any of the unbreakable rules (without writing code). Also, please let me know if you think this will solve the following problems:


Problem 1: Passive abilities with an activation_trigger of END_OF_TURN, such as "Soothing Aura" , are not activating at the end of a combatant's turn as required by the game's core mechanics.




Problem 2: The battle log provides no feedback on passive ability activations, leaving the player unaware of crucial automatic effects taking place during combat.

Problem 3: The 3-phase turn lifecycle is functionally incomplete. Without the logic for passive triggers, we cannot properly test the new architecture or build more complex mechanics upon it.

1. Goal:
Implement the logic within the handleEndOfTurn function to correctly identify and execute all passive abilities that have an activation_trigger of END_OF_TURN.

2. File Modifications:

Primary Target: server/battleEngine.ts

3. Implementation Details:
The handleEndOfTurn function in server/battleEngine.ts needs to be modified. It must now contain the logic to scan the appropriate monsters, find qualifying passive abilities, and execute their effects.

Step A: Identify Relevant Monsters

Inside handleEndOfTurn, identify the team of the combatant whose turn just ended.

Create a list of all monsters on that team (both the active monster and all benched monsters).

Step B: Scan for and Apply Passives

Iterate through every monster on that team. For each monster, check its list of abilities.

For each ability, check if it meets the following database-driven criteria:


ability_type must be 'PASSIVE'.


activation_trigger must be 'END_OF_TURN'.

The ability's activation_scope must match the monster's current status:

If 

activation_scope is 'ACTIVE', the monster must be the one who just finished its turn.

If 

activation_scope is 'BENCH', the monster must be on the bench (i.e., not the one who just finished its turn).

Step C: Execute Effects and Log

If an ability meets all criteria, execute its effect.


For "Soothing Aura": The effect is to heal the active monster for a percentage of its Max HP, as defined by the ability's properties in the database.


After applying the effect, add a clear, descriptive message to the battle log. For example: "[Monster]'s Soothing Aura heals [Active Monster] for X HP."

4. Architecture Compliance Check:

Does this plan execute logic exclusively on the server within 

server/battleEngine.ts? 

Does it rely on database properties (

ability_type, activation_trigger, activation_scope) to drive the logic, with no hardcoded rules? 


Does this modification build upon the existing 

handleEndOfTurn function, adhering to our principle of Centralized Logic? 